1. How to achieve multiple inheritance? --> Interface
2. With classes we can achieve hierarchical, multilevel and single inheritance but not multiple 
   due to ambiguity issue
3. In interface we don't give method body we do only declaration we do not define them
4. Implements keyword is used to create inheritance between class and interface
5. Interface doesn't give business logic instead only method declaration and we need to override  
   those method in child class
6. With the advantage of implements keyword we can inherit multiple interfaces by giving a 
   comma(,)
7. You can create your own non overridden method 
8. In Interface we cannot create object of it strictly
9. By creating an object of child class I can access all overridden and non overridden methods
10. Object of interface cannot be created but we can give reference to child class object 
    which is called top casting
11. Child class object can be referred by parent interface reference variable 
12. If reference is of interface and object is class then Only those methods can be 
    accessible those are present in specific interface(Overridden methods)
13. We cannot do down casting in Interface as creating object of interface is not allowed
14. In Interface we cannot create static prototype method or called as abstract method
15. Interface variable are static and final by default even if we don't write static or final
16. Since the variable are static and final by nature we cannot modify it
17. Calling these variables by reference variable will show warning so instead we need to 
    call this by interface name    
18. From Java 1.8 / JDK 1.8 you can have static methods in Interface with method body and can't be overridden
19. From Java 1.8 / JDK 1.8 you can have default methods in Interface with method body but that cannot be static and can't be overridden
20. If we have one common prototype method in all interface we need to write that unimplemented method and within that method we have give business logic 
    that as per which interface we need to provide business logic by simple if else or switch case
21. Interface to Interface calling is used by writing extends keyword
22. A class can implement more than one interface along with a class as well 